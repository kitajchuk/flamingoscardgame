/******************************************************************************
 * Fonts: Util
*******************************************************************************/
@mixin font-normal() {
    font-stretch: normal;
    font-style: normal;
}


/******************************************************************************
 * Fonts: Styles
*******************************************************************************/
@mixin font-family() {
    font-family: $font-family;
    @include font-normal();
}


/******************************************************************************
 * Type
*******************************************************************************/
@mixin p() {
    font-size: $p-size;
    line-height: $p-line;
    @include font-family();
}
@mixin h1() {
    font-size: $h1-size;
    line-height: $h1-line;
    @include font-family();
}
@mixin h2() {}
@mixin h3() {}



/******************************************************************************
 * Document states
*******************************************************************************/
@mixin state( $module, $state ) {
    .is-#{$module}-#{$state} & {
        @content;
    }
}
@mixin hover() {
    .is-hoverable &:hover {
        @content;
    }
}
@mixin wrap() {
    padding-left: $padding-1;
    padding-right: $padding-1;
}
@mixin exp() {
    padding-top: $expander-1;
    padding-bottom: $expander-1;

    @include respond( $mobile-breakpoint ) {
        padding-top: $expander-2;
        padding-bottom: $expander-2;
    }
}
@mixin exp2() {
    padding-top: $expander-2;
    padding-bottom: $expander-2;

    @include respond( $mobile-breakpoint ) {
        padding-top: $expander-2 + $expander-1;
        padding-bottom: $expander-2 + $expander-1;
    }
}



/******************************************************************************
 * Media queries
 *
 * @see ../config/_variables.scss for Breakpoints
*******************************************************************************/
@mixin respond( $width ) {
    @media only screen and ( max-width: $width ) {
        @content;
    }
}
@mixin respond-min( $width ) {
    @media only screen and ( min-width: $width ) {
        @content;
    }
}
